name: CI/CD MLflow
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
env:
  CSV_URL: "MLproject/train.csv"

jobs:
  build:
    runs-on: windows-latest
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow

      - name: Set MLflow Tracking Credentials for DagsHub
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.DAGSHUB_MLFLOW_URI }} # Use secrets for URIs and credentials
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          echo "MLFLOW_TRACKING_URI set to: $env:MLFLOW_TRACKING_URI"
          # Optional: Add dagshub.init() if your script expects it or if it helps auth
          # python -c "import dagshub; dagshub.init(repo_owner='valiarw', repo_name='Membangun_Model', mlflow=True)"

      - name: Run MLflow Training Script
        # Replace 'modelling.py' with your actual training script name
        run: |
          python modelling.py 100 10

      - name: Run mlflow project
        run: |
          # Pastikan path ini sesuai dengan lokasi script preprocessing kamu
          mlflow run MLproject --env-manager=local 

      # Get latest run_id
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"
          
      # Build Docker Model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc" 

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

